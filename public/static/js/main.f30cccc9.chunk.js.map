{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/UiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","helpers/calendar-messages-es.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","inicialState","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","value","setValue","reset","handleInputChange","target","name","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","Navbar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minute","second","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTilteValid","formValue","setFormValue","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","locale","localizer","momentLocalizer","CalendarScreen","lastView","setViewLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f30cccc9.chunk.js","sourcesContent":["export const types={\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n    \r\n    eventStartAddNew: '[event] Set Active',\r\n    eventAddNew: '[event] Add New',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event update',\r\n    eventDeleted: '[event] Event delete',\r\n    eventLoaded: '[event] Event Loaded',\r\n\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    checking: true  \r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            \r\n            case types.authLogin:\r\n                return {\r\n                    ...state,\r\n                    ...action.payload,\r\n                    checking: false\r\n                }\r\n            case types.authCheckingFinish:\r\n                return{\r\n                    ...state,\r\n                    checking: false\r\n                }\r\n            case types.authLogout:\r\n                return{\r\n                    checking: false\r\n                }\r\n\r\n            default:\r\n                return state\r\n        }\r\n}","\r\nimport { types } from '../types/types';\r\n// {\r\n//     id: \"obtiene de bd\",\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(), //es como new Date() // inicio del evento\r\n//     end: moment().add(2, 'hours').toDate(),  //fin del evento mas 2 horas\r\n//     \r\n//     notes: 'comprar el pastel',\r\n//     user: { //usuario que hizo la nota \r\n//         _id:'123',\r\n//         name: 'Fernando'\r\n//     }\r\n// }\r\n\r\n\r\nconst inicialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = ( state = inicialState, action ) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            \r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload \r\n            }\r\n        \r\n        case types.eventAddNew:\r\n        \r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events, //para tener los anteriores\r\n                    action.payload  //para agregar el nuevo\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        \r\n        case types.eventUpdated: //actualizar un evento\r\n            return{\r\n                ...state,\r\n                events: state.events.map( //busca un id igual al evento enviando y si lo encuentra lo devuelve actualziado sino devuelve el mismo\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        \r\n        case types.eventDeleted: //eliminar un evento\r\n            return{\r\n                ...state,\r\n                events: state.events.filter( //filtra todos los eventos y no devuelve el que este en active, porque ese es el que se elimino\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null //quitamos la nota eliminada de activeEvent \r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...inicialState\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","//import React from 'react'\r\nimport { types } from '../types/types'\r\n\r\nconst inicialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const UiReducer = (state= inicialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            \r\n            return  {\r\n                ...state,\r\n                modalOpen: true //cambiamos el estado de modal\r\n                \r\n            }\r\n        case types.uiCloseModal:\r\n            \r\n            return  {\r\n                ...state,\r\n                modalOpen: false //cambiamos el estado de modal\r\n                \r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { UiReducer } from \"./UiReducer\";\r\n\r\n//combinador de reducer\r\nexport const rootReducer = combineReducers({\r\n    ui: UiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store= createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' )=>{\r\n\r\n    //localhost:4000/api/auth\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    //const url = `https://localhost:4000/api/auth`;\r\n\r\n    if(method === 'GET'){\r\n        return fetch( url );    \r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        } );\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' )=>{\r\n\r\n    \r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token= localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET'){\r\n        return fetch( url,{\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        } );    \r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        } );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from \"moment\";\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n    \r\n    return events.map(\r\n        (e)=>({\r\n            ...e, //devuelve todo\r\n            //solo cambia esto\r\n            end: moment(e.end).toDate(), \r\n            start: moment(e.start).toDate()\r\n        })\r\n    )\r\n\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\"\r\n\r\nexport const eventStartAddNew = (event) =>{\r\n    return async (dispatch, getState) =>{\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp= await fetchConToken('events', event, 'POST');\r\n            const body= await resp.json()\r\n            //console.log(body)\r\n            \r\n            if ( body.ok){\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log(event);\r\n                dispatch(eventAddNew(event));\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) =>({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) =>({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = ()=>({type: types.eventClearActiveEvent})\r\n\r\nexport const eventStartUpdate = (event)=>{\r\n    return async(dispatch)=>{\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            if( body.ok ){\r\n                dispatch(eventUpdated(event));\r\n                \r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n const eventUpdated = (event)=> ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\n\r\n//eliminar evento\r\nexport const eventStartDelete = ()=>{\r\n    return async(dispatch ,getState) => {//getState para sacar el id evento\r\n        \r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n        //console.log(id)\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${id}`,{} , 'DELETE');\r\n            const body = await resp.json();\r\n            if( body.ok ){\r\n                dispatch(eventDeleted());\r\n                \r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = ()=>({type: types.eventDeleted})\r\n\r\n//para cargar los eventos de bd \r\nexport const eventStartLoading = ()=>{\r\n    return async(dispatch) =>{\r\n\r\n        try {\r\n    \r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();     \r\n\r\n            const events = prepareEvents( body.eventos );\r\n\r\n\r\n            //console.log(events)\r\n            dispatch(eventLoaded( events ))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }  \r\n        \r\n        //console.log('????')\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events)=>({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout=()=>({\r\n    type: types.eventLogout\r\n}) ","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        \r\n        //console.log(email, password)\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        //console.log(body)\r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token ); //guarda el token en el navegador\r\n            localStorage.setItem('token-init-date', new Date().getTime() );//guardamos la hora de guardado de token\r\n            \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}  \r\nexport const startRegister = (name, email, password) =>{\r\n    return async( dispatch ) => {\r\n        \r\n        const resp = await fetchSinToken( 'auth/new', { email, password ,name}, 'POST' );\r\n        const body = await resp.json();\r\n        //console.log(body.ok)\r\n        //console.log(body)\r\n        if(body.ok){\r\n            \r\n            localStorage.setItem('token',body.token ); //guarda el token en el navegador\r\n            localStorage.setItem('token-init-date', new Date().getTime() );//guardamos la hora de guardado de token\r\n            console.log(body)\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n                //password: body.password\r\n                \r\n            }) )\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n\r\n}\r\nexport const startChecking= ()=> {\r\n    return async(dispatch) =>{\r\n\r\n        const resp = await fetchConToken( 'auth/renew');\r\n        const body = await resp.json();\r\n        //console.log(body.ok)\r\n        //console.log(body)\r\n        if(body.ok){\r\n            \r\n            localStorage.setItem('token',body.token ); //guarda el token en el navegador\r\n            localStorage.setItem('token-init-date', new Date().getTime() );//guardamos la hora de guardado de token\r\n            //console.log(body)\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n                //password: body.password\r\n                \r\n            }) )\r\n        }else{\r\n            //Swal.fire('Error', body.msg, 'error');\r\n            dispatch (checkingFinish())\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish=()=>({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\nconst login = (user) =>({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout =()=>{\r\n    return(dispatch) =>{\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\nconst logout = ()=>({\r\n    type: types.authLogout\r\n})","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [value, setValue] = useState(initialState);\r\n        \r\n    \r\n        //funcion para borrar el formulario \"vaciar input\"\r\n        const reset = () =>{ \r\n            setValue(initialState);\r\n        }\r\n\r\n        //es una funcion para que el input se escriba en tiempo real\r\n        const handleInputChange=({target}) =>{ //desestructuramos target para obtener los parametros\r\n    \r\n            setValue({//esto escribira todos los datos q ingrese en el input\r\n                \r\n                ...value, \r\n        \r\n                [target.name] : target.value  \r\n            \r\n            })\r\n        }\r\n        //------------------------------------\r\n        \r\n\r\nreturn [value, handleInputChange, reset];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    const dispatch = useDispatch(); //lo necesitamos para agregar el dispath a redux\r\n    \r\n// para login \r\n    const  [formLoginValues, handleLoginInputChange] = useForm( {\r\n\r\n        lEmail: 'fernando@gmail.com',\r\n        lPassword: '123456'\r\n    } );\r\n    \r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const handleLogin = ( e ) => { \r\n        e.preventDefault();\r\n        \r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n//--\r\n\r\n//para registro\r\n    const  [formRegisterValues, handleRegisterInputChange] = useForm( {\r\n\r\n        rName: 'nando',\r\n        rEmail: 'nando@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    } );\r\n\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const handleRegister = ( e ) => { \r\n        e.preventDefault();\r\n        if( rPassword1 !== rPassword2 ){\r\n            return Swal.fire('Error', 'Las Contraseñas deben ser iguales', 'error' );\r\n        }\r\n\r\n        //console.log(rName, rEmail, rPassword1)\r\n        dispatch( startRegister(rName, rEmail, rPassword1) );\r\n    }\r\n\r\n//--\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch()\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n\r\n    const handleLogout = ()=>{\r\n        dispatch( startLogout() )\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button  /* boton de salir */ \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i> {/*icono de salir */}\r\n                <span>Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => { //event recibe todo el evento\r\n    \r\n    const {title, user}= event; //extraemos el titulo y el nombre\r\n    //console.log(event)\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () =>({type: types.uiOpenModal});\r\nexport const uiCloseModal = () =>({type: types.uiCloseModal});","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n//import { uiOpenModal } from '../../actions/ui';\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n };\r\n\r\nModal.setAppElement('#root');\r\n\r\n//momento actual\r\nconst now= moment().minute(0).second(0).add(1,'hours');\r\n\r\nconst nowPlus1= now.clone().add(1, 'hours'); //funcion para clonar\r\n\r\n//valor inicial del evento\r\nconst initEvent={\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\n\r\n\r\nexport const CalendarModal = () => {\r\n    \r\n    //TODO: cerrar modal\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate())\r\n\r\n    const [titleValid, setTilteValid] = useState(true) //para colocar la indicacion de campo titulo\r\n\r\n\r\n    //variables del formulario\r\n    \r\n    \r\n    \r\n    const [formValue, setFormValue] = useState(initEvent)\r\n\r\n        const { notes, title, start ,end } =formValue;\r\n\r\n        //efecto que esta pendiente de lsoc ambios de activeEvent\" \r\n            const {activeEvent} = useSelector(state => state.calendar) //para saber el estado de modalOpen redux\r\n            \r\n            useEffect(() => {\r\n                //console.log(activeEvent)\r\n                if(activeEvent){ // esto soluciona si fuera null, ya que no puedo enviarle null al setFormValue\r\n                    setFormValue(activeEvent)\r\n                } else{\r\n                    setFormValue(initEvent) //si no esta activo entonces inicializa de nuevo \r\n                }\r\n            }, [activeEvent])\r\n        //--\r\n\r\n\r\n        //cambia valor \r\n        const handleInputChange = ({target}) =>{ //solo me importa target\r\n\r\n            setFormValue({\r\n                ...formValue,\r\n                [target.name]: target.value   \r\n            })\r\n        }\r\n    //--\r\n\r\n    //funcion que cierra el modal\r\n    const {modalOpen} = useSelector(state => state.ui) //para saber el estado de modalOpen redux\r\n    const dispatch = useDispatch(); //lo necesitamos para agregar el dispath a redux\r\n    \r\n    const closeModal = ()=>{\r\n        //console.log('cerrar modal');\r\n        dispatch( uiCloseModal() )\r\n        dispatch(eventClearActiveEvent()); //limpiar el activeEvent\r\n        setFormValue(initEvent) //restablecemos el formulario\r\n\r\n        \r\n        //setIsOpen(false);//cambio su valor\r\n    }\r\n\r\n    //cambio de fecha inicio\r\n    const handleStartDateChange=(e)=>{\r\n        //console.log(e);\r\n        setDateStart(e); //la nueva fecha viene en el \"e\"\r\n        setFormValue({\r\n            ...formValue,\r\n            start: e\r\n        })\r\n    }\r\n    //cambio de fecha fin\r\n    const handleEndDateChange = (e)=>{\r\n        //console.log(e);\r\n        setDateEnd(e); //la nueva fecha viene en el \"e\"\r\n        setFormValue({\r\n            ...formValue,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    //submit de formulario\r\n    const handleSubmitForm = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n        //validacioon para que la fecha fin no sea menor que la inicio\r\n        if ( momentStart.isSameOrAfter(momentEnd) ){\r\n            return Swal.fire('Error','La fecha fin debe ser mayor a la decha inicio','error')\r\n           \r\n        }\r\n\r\n        //validacion para el campo no este vacio\r\n        if(title.trim().length <2 ){\r\n            return setTilteValid(false);//cambia el estado del titulo valido\r\n        }\r\n\r\n        if ( activeEvent ){\r\n            \r\n            dispatch( eventStartUpdate( formValue ) ) //si activeEvent es true es una evento a actualizar sino es un nuevo evento\r\n        \r\n        }else {\r\n            \r\n            dispatch(eventStartAddNew(formValue))\r\n            \r\n        }\r\n\r\n        //TODO: realizar grabacion\r\n        //console.log(formValue);\r\n\r\n\r\n        setTilteValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen} // muestra el modal, si esta true se muestra\r\n            //onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles} //agrega estilos creados aqui\r\n            \r\n            closeTimeoutMS={200} //tarda en desaparecer\r\n            //de styles.css\r\n            className=\"modal\" \r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {(activeEvent) ? 'Editar Evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                     {/*componente externo de fecha */}\r\n                     <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                     />\r\n\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    {/*componente externo de fecha */}\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd} \r\n                        minDate={dateStart}//valdiacion para que no sea menor a dateStart\r\n                        className=\"form-control\"\r\n                     />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`} //cambiara segun el title sea valido\r\n                        placeholder=\"Título del evento\"\r\n                        autoComplete=\"off\"\r\n                        \r\n                        //cambio de valor de form\r\n                        name=\"title\"\r\n                        value= {title}\r\n                        onChange={handleInputChange}\r\n                        //--\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        \r\n                        //cambio de valor de form\r\n                        name=\"notes\"\r\n                        value= {notes}\r\n                        onChange={handleInputChange}\r\n                        //--\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch(); //lo necesitamos para agregar el dispath a redux\r\n\r\n    const handleClickNew = ()=>{\r\n        dispatch( uiOpenModal() );\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch(); //lo necesitamos para agregar el dispath a redux\r\n    \r\n    const handleDelete=()=>{\r\n        dispatch( eventStartDelete() ); //\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","//cambiar idioma a los textos \r\n\r\nexport const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\n//calendario\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css' //css para que se vea bien\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\n//import { messages } from '../helpers/calendar-messages-es'; //cambio de idioma\r\n\r\nimport 'moment/locale/es';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nmoment.locale('es') //cambiar el idioma a moment\r\n\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n//creamos un evento apra enviar al calendario\r\n// const event = [{\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(), //es como new Date() // inicio del evento\r\n//     end: moment().add(2, 'hours').toDate(),  //fin del evento mas 2 horas\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'comprar el pastel',\r\n//     user: { //usuario que hizo la nota \r\n//         _id:'123',\r\n//         name: 'Fernando'\r\n//     }\r\n// }]\r\n//-\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch(); //lo necesitamos para agregar el dispath a redux\r\n\r\n    const {activeEvent} = useSelector(state => state.calendar) //para saber el estado de modalOpen redux\r\n\r\n    //TODO leer del store, los eventos \"las notas\"\r\n    const {events} = useSelector(state => state.calendar) //para saber el estado de modalOpen redux\r\n    const {uid} = useSelector(state => state.auth) //para saber el estado de modalOpen redux\r\n    \r\n    // console.log('ver los eventos')\r\n    // console.log(events)\r\n\r\n\r\n    //buscamos la vista pasada sino usamos la del mes--- ayuda a cuando recargamos la pagina se quede donde la dejamos\r\n    const [lastView, setViewLastView] = useState(localStorage.getItem('lastView') || 'month'); \r\n    \r\n    //apra carar los eventos\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n\r\n    //funcion cuando hace doble click\r\n    const onDoubleClick=(e)=>{ //e recibe el evento\r\n        //console.log('abrir modal');\r\n        dispatch( uiOpenModal() );//activamos la nota\r\n    }\r\n    \r\n    //funcion cuando hace un click\r\n    const onSelectEvent=(e)=>{ //e recibe el evento\r\n        //dispatch( uiOpenModal() ); //activamos la nota\r\n        dispatch( eventSetActive(e) ); //\r\n        \r\n    }\r\n    //sacar el boton eliminar cuando aga click en otro lugar\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent()) \r\n    }\r\n\r\n    //avisa en que vista estoy mes dia semana\r\n    const onViewChange=(e)=>{ //e recibe el evento\r\n        setViewLastView(e);\r\n        localStorage.setItem('lastView', e); //grabar la informacion en el localstore\r\n    }\r\n    const eventStyleGetter =(event, start, end, isSelected)=>{\r\n        //console.log(event, start, end, isSelected)\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id ) ? '#367CF7': '#465660',//para ver colores diferentes de las notas propias\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return{\r\n            style\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar/>\r\n            {/*calendario */}\r\n            <Calendar \r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages} //enviamos el cambio de idioma\r\n                eventPropGetter={eventStyleGetter} //enviamos un stylo\r\n                onDoubleClickEvent={onDoubleClick} //enviamos un evento doble click\r\n                onSelectEvent={onSelectEvent} //enviamos un evento un click\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={ true }\r\n\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                components = {{\r\n                    event: CalendarEvent //enviamos el evento de esta forma \r\n                }}\r\n            />  \r\n\r\n                <AddNewFab/>\r\n                {\r\n                    activeEvent &&\r\n                    <DeleteEventFab/>\r\n                }\r\n\r\n            <CalendarModal/>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest //trae todas las otras propiedades\r\n}) => {\r\n\r\n//console.log(rest.location.pathname) //obtenemos la pagina en la que esta actualmente\r\n\r\n//localStorage.setItem('lastPath',rest.location.pathname);\r\n   \r\n    return (\r\n        <Route {...rest}\r\n\r\n            component={(props)=> (\r\n                (isAuthenticated)\r\n                    ?(<Component {...props} />)\r\n                    :(<Redirect to=\"/login\" />)\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated : PropTypes.bool.isRequired ,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest //trae todas las otras propiedades\r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n        \r\n            component={(props)=> (\r\n                (isAuthenticated)\r\n                    ?(<Redirect to=\"/\" />)\r\n                    :(<Component {...props} />)\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\nPublicRoute.propTypes = {\r\n    isAuthenticated : PropTypes.bool.isRequired ,\r\n    component: PropTypes.func.isRequired\r\n}","\r\n\r\n//de la pagina oficial\r\n    import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n    import {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n    \r\n    } from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n//--\r\n\r\n\r\nexport const AppRouter = () => {\r\nconst dispatch = useDispatch();\r\n\r\nconst {checking, uid} = useSelector(state => state.auth)\r\n\r\nuseEffect(() => {\r\n    dispatch(startChecking())\r\n}, [dispatch])\r\n\r\n    if(checking){\r\n        return <h5>Espere..</h5>\r\n    }\r\n\r\n    return (\r\n        \r\n        <Router>\r\n                <div>\r\n\r\n                    <Switch>\r\n                        \r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen }\r\n                        isAuthenticated={!!uid} //comvierte a un booleano el \"!!\"\r\n                    />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen }\r\n                        isAuthenticated={!!uid} //comvierte a un booleano el \"!!\"\r\n                    />\r\n                            \r\n\r\n                        <Redirect to=\"/\"/>\r\n\r\n                    </Switch>\r\n    \r\n                </div>\r\n\r\n        </Router>\r\n    \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n                <AppRouter/>\r\n\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\n//console.log(process.env)\nReactDOM.render(\n \n    <CalendarApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}